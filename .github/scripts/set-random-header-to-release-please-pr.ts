// This script randomizes an array of headers and applies one to the pull request
// generated by release-please (workflows/release-please.yml).

// Before applying, it checks if the current header is one of the values in the array,
// which prevents reassigning another header in case the PR is updated.

///////////////////////////////////////////////////////////////////////////////////////

/**
 * PullRequest type from the official googleapis/release-please.
 *
 * See: https://github.com/googleapis/release-please/blob/main/src/pull-request.ts#L15
 */
interface PullRequest {
  readonly headBranchName: string;
  readonly baseBranchName: string;
  readonly number: number;
  readonly mergeCommitOid?: string;
  readonly title: string;
  readonly body: string;
  readonly labels: string[];
  readonly files: string[];
  readonly sha?: string;
}

const HEADER_LIST = [
  "Header 1",
  "Header 2",
  "Header 3",
  "Header 4",
  "Header 5",
];

console.info("::notice::Getting pull request JSON string from env...");
const PR_JSON_STR = Deno.env.get("PR_JSON_STR");
if (!PR_JSON_STR) {
  console.error("::error::PR_JSON_STR environment variable is not set");
  Deno.exit(1);
}

console.info("Parsing pull request JSON string...");
let pullRequestData: PullRequest;
try {
  pullRequestData = JSON.parse(PR_JSON_STR) as PullRequest;
} catch (error) {
  console.error("::error::Failed to parse PR_JSON_STR environment variable as JSON \n" + error);
  Deno.exit(1);
}
